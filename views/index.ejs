<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trackerr - Location Sharing</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet-color-markers/dist/leaflet-color-markers.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.css" integrity="sha512-h9FcoyWjHcOcmEVkxOfTLnmZFWIH0iZhZT1H2TbOq55xssQGEJHEaIm+PgoUaZbRvQTNTluNOEfb1ZRy6D3BOw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
        
        * {
            font-family: 'Inter', sans-serif;
            transition: all 0.3s ease;
        }
        
        body {
            overflow: hidden;
            background-color: #0f0f0f;
        }
        
        #map {
            opacity: 0;
            transition: opacity 0.8s ease-in-out;
            z-index: 10;
        }
        
        .overlay-enter {
            animation: fadeIn 0.5s ease-in-out;
        }
        
        .overlay-exit {
            animation: fadeOut 0.8s ease-in-out forwards;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        @keyframes fadeOut {
            from { opacity: 1; transform: translateY(0); }
            to { opacity: 0; transform: translateY(-20px); display: none; }
        }
        
        .animate-pulse-slow {
            animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        }
        
        .dark-gradient-bg {
            background: linear-gradient(135deg, #000000 0%, #1a1a1a 50%, #2d2d2d 100%);
        }
        
        .location-access {
            display: none;
            text-align: center;
            margin-top: 20px;
        }
        
        .location-loader {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255,255,255,.3);
            border-radius: 50%;
            border-top-color: #fff;
            animation: spin 1s ease-in-out infinite;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        .success-checkmark {
            display: none;
            color: #10B981;
            font-size: 24px;
            margin-left: 10px;
        }
        
        /* Animated map background */
        .map-background {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: -1;
            overflow: hidden;
            background-color: #0a0a0a;
        }
        
        .map-line {
            position: absolute;
            background: rgba(255, 255, 255, 0.1);
        }
        
        .horizontal {
            height: 1px;
            width: 100%;
            animation: moveHorizontal 20s linear infinite;
        }
        
        .vertical {
            width: 1px;
            height: 100%;
            animation: moveVertical 15s linear infinite;
        }
        
        @keyframes moveHorizontal {
            0% { transform: translateY(0); }
            100% { transform: translateY(20px); }
        }
        
        @keyframes moveVertical {
            0% { transform: translateX(0); }
            100% { transform: translateX(20px); }
        }
        
        .map-node {
            position: absolute;
            width: 8px;
            height: 8px;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            animation: pulseNode 3s infinite;
        }
        
        @keyframes pulseNode {
            0%, 100% { transform: scale(1); opacity: 0.3; }
            50% { transform: scale(1.5); opacity: 0.6; }
        }
        
        .pulse-dot {
            position: absolute;
            width: 12px;
            height: 12px;
            background: rgba(255, 255, 255, 0.5);
            border-radius: 50%;
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% { transform: scale(0.8); opacity: 0.5; }
            70% { transform: scale(2); opacity: 0; }
            100% { transform: scale(2); opacity: 0; }
        }
        
        .moving-marker {
            position: absolute;
            width: 16px;
            height: 16px;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 50% 50% 50% 0;
            transform: rotate(-45deg);
            animation: moveMarker 25s linear infinite;
        }
        
        @keyframes moveMarker {
            0% { top: 20%; left: 10%; }
            25% { top: 70%; left: 30%; }
            50% { top: 40%; left: 70%; }
            75% { top: 20%; left: 50%; }
            100% { top: 20%; left: 10%; }
        }
        
        .road {
            position: absolute;
            background: rgba(255, 255, 255, 0.08);
            border-radius: 2px;
        }
        
        .road-horizontal {
            height: 3px;
            animation: roadHorizontal 18s linear infinite;
        }
        
        .road-vertical {
            width: 3px;
            animation: roadVertical 22s linear infinite;
        }
        
        @keyframes roadHorizontal {
            0% { transform: translateX(0); }
            100% { transform: translateX(20px); }
        }
        
        @keyframes roadVertical {
            0% { transform: translateY(0); }
            100% { transform: translateY(20px); }
        }
        
        .dark-card {
            background: rgba(18, 18, 18, 0.95);
            border: 1px solid rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
        }
        
        .dark-input {
            background: rgba(30, 30, 30, 0.8);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: #fff;
        }
        
        .dark-input:focus {
            border-color: rgba(59, 130, 246, 0.5);
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }
        
        .dark-input::placeholder {
            color: rgba(255, 255, 255, 0.4);
        }
        
        .dark-button {
            background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
        }
        
        .dark-button:hover {
            background: linear-gradient(135deg, #2563eb 0%, #1e40af 100%);
        }
    </style>
</head>
<body class="bg-gray-900">
    <div id="map" class="w-full h-full absolute"></div>

    <div id="overlay" class="dark-gradient-bg w-full h-full absolute flex flex-col items-center justify-center z-50 overlay-enter">
        <div class="map-background" id="animatedMapBg"></div>
        
        <div class="dark-card rounded-2xl shadow-2xl p-8 w-11/12 max-w-md mx-4 relative z-10">
            <div class="text-center mb-8">
                <div class="flex justify-center mb-4">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                    </svg>
                </div>
                <h1 class="text-3xl font-bold text-white mb-2">Trackerr</h1>
                <p class="text-gray-400">Share your location with friends</p>
            </div>
            
            <div class="mb-6">
                <label for="username" class="block text-sm font-medium text-gray-300 mb-2">Enter your name to begin</label>
                <input 
                    type="text" 
                    id="username" 
                    placeholder="Your name" 
                    class="w-full px-4 py-3 rounded-lg dark-input focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition"
                    autocomplete="off"
                >
            </div>
            
            <button 
                onclick="startTracking()" 
                id="startBtn"
                class="w-full dark-button text-white py-3 px-4 rounded-lg font-medium hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 flex items-center justify-center disabled:opacity-50 disabled:cursor-not-allowed"
            >
                Start Tracking
                <svg id="loadingIcon" class="hidden animate-spin -mr-1 ml-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
            </button>
            
            <div id="locationAccess" class="location-access mt-6 p-4 bg-gray-800 rounded-lg">
                <p class="text-blue-300 flex items-center justify-center">
                    <span class="location-loader"></span>
                    <span class="ml-2">Accessing your location...</span>
                </p>
            </div>
            
            <p class="text-xs text-gray-500 text-center mt-6">
                By using Trackerr, you agree to our Terms of Service and Privacy Policy
            </p>
        </div>
        
        <div class="mt-12 text-center text-gray-300 opacity-90 relative z-10">
            <p class="text-sm animate-pulse-slow">Your privacy matters â€¢ Location data is encrypted</p>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet-src.min.js"></script>
    <script src="https://cdn.socket.io/4.8.1/socket.io.min.js"></script>
    <script>
        let map;
        let userMarker;
        
        function createAnimatedMapBackground() {
            const container = document.getElementById('animatedMapBg');
            
            for (let i = 0; i < 20; i++) {
                const horizontalLine = document.createElement('div');
                horizontalLine.className = 'map-line horizontal';
                horizontalLine.style.top = (i * 10) + '%';
                horizontalLine.style.animationDelay = (i * 0.5) + 's';
                container.appendChild(horizontalLine);
                
                const verticalLine = document.createElement('div');
                verticalLine.className = 'map-line vertical';
                verticalLine.style.left = (i * 10) + '%';
                verticalLine.style.animationDelay = (i * 0.5) + 's';
                container.appendChild(verticalLine);
            }
            
            for (let i = 0; i < 15; i++) {
                const node = document.createElement('div');
                node.className = 'map-node';
                node.style.top = Math.random() * 100 + '%';
                node.style.left = Math.random() * 100 + '%';
                node.style.animationDelay = (Math.random() * 2) + 's';
                container.appendChild(node);
            }
            
            for (let i = 0; i < 8; i++) {
                const roadH = document.createElement('div');
                roadH.className = 'road road-horizontal';
                roadH.style.top = (Math.random() * 80 + 10) + '%';
                roadH.style.width = '80%';
                roadH.style.left = '10%';
                container.appendChild(roadH);
                
                const roadV = document.createElement('div');
                roadV.className = 'road road-vertical';
                roadV.style.left = (Math.random() * 80 + 10) + '%';
                roadV.style.height = '80%';
                roadV.style.top = '10%';
                container.appendChild(roadV);
            }
            
            const marker = document.createElement('div');
            marker.className = 'moving-marker';
            container.appendChild(marker);
            
            for (let i = 0; i < 5; i++) {
                const pulseDot = document.createElement('div');
                pulseDot.className = 'pulse-dot';
                pulseDot.style.top = (Math.random() * 80 + 10) + '%';
                pulseDot.style.left = (Math.random() * 80 + 10) + '%';
                pulseDot.style.animationDelay = (Math.random() * 2) + 's';
                container.appendChild(pulseDot);
            }
        }
        
        function startTracking() {
            const username = document.getElementById('username').value.trim();
            if (!username) {
                const input = document.getElementById('username');
                input.classList.add('border-red-500');
                input.placeholder = "Please enter your name first!";
                setTimeout(() => {
                    input.classList.remove('border-red-500');
                }, 2000);
                return;
            }
            
            const startBtn = document.getElementById('startBtn');
            const loadingIcon = document.getElementById('loadingIcon');
            const locationAccess = document.getElementById('locationAccess');
            startBtn.disabled = true;
            loadingIcon.classList.remove('hidden');
            locationAccess.style.display = 'block';
            
            if ("geolocation" in navigator) {
                navigator.geolocation.getCurrentPosition(
                    function(position) {
                        initMap(position.coords.latitude, position.coords.longitude);
                        
                        const overlay = document.getElementById('overlay');
                        overlay.classList.remove('overlay-enter');
                        overlay.classList.add('overlay-exit');
                        
                        setTimeout(() => {
                            const mapElement = document.getElementById('map');
                            mapElement.style.opacity = "1";
                            
                            setTimeout(() => {
                                overlay.style.display = 'none';
                            }, 800);
                        }, 500);
                    },
                    function(error) {
                        console.error("Error getting location:", error);
                        locationAccess.innerHTML = `
                            <p class="text-red-400">
                                Could not access your location. Please ensure location services are enabled.
                            </p>
                            <button onclick="startTracking()" class="mt-2 text-blue-400 font-medium">
                                Try Again
                            </button>
                        `;
                        startBtn.disabled = false;
                        loadingIcon.classList.add('hidden');
                    },
                    {
                        enableHighAccuracy: true,
                        timeout: 10000,
                        maximumAge: 0
                    }
                );
            } else {
                locationAccess.innerHTML = '<p class="text-red-400">Geolocation is not supported by your browser.</p>';
                startBtn.disabled = false;
                loadingIcon.classList.add('hidden');
            }
        }
        
        function initMap(lat, lng) {
            map = L.map('map').setView([lat, lng], 15);
            
            L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {
                attribution:"By-Ankit Sharma",
                subdomains: 'abcd',
                maxZoom: 20
            }).addTo(map);
            
            userMarker = L.marker([lat, lng]).addTo(map)
                .bindPopup('Your location')
                .openPopup();
            
            L.circle([lat, lng], {
                color: '#3b82f6',
                fillColor: '#3b82f6',
                fillOpacity: 0.2,
                radius: 50
            }).addTo(map);
            
            
        }
        
        document.getElementById('username').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                startTracking();
            }
        });
        
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('username').focus();
            createAnimatedMapBackground();
        });
    </script>
</body>
</html>